---
import ThemeToggle from "./ThemeToggle.astro"

const navItems = [
  {
    title: "Work Experience",
    label: "work-experience",
    url: "/#experience",
  },
  // {
  //   title: "Proyects",
  //   label: "proyects",
  //   url: "/#proyects",
  // },
  // {
  //   title: "About-me",
  //   label: "about-me",
  //   url: "/#about-me",
  // },
  {
    title: "Contact",
    label: "contact",
    url: "mailto:markelkortajarena@gmail.com",
  },
]
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
  <nav
    class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500")
            } else {
              item.classList.remove("text-blue-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    background-color: #ffffff80; /* Light mode */
    background-color: #1f2937e6; /* Dark mode */
  }

  @keyframes nav-shadown {
    0% {
      background-color: #1f293700; /* dark:bg-gray-800/0 */
      background-color: #ffffff00; /* bg-white/0 */
    }
    to {
      box-shadow: 0 4px 6px #0000001a; /* shadow-lg */
      backdrop-filter: blur(10px); /* backdrop-blur */
      border-color: #ffffff1a; /* ring-white/10 */
    }
  }
</style>